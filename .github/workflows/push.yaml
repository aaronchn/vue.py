name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

defaults:
  run:
    shell: bash

jobs:
  all:
    runs-on: ubuntu-20.04
    steps:
      # Setup
      - name: Checkout Repository
        uses: actions/checkout@v1.2.0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: browser-actions/setup-chrome@latest
      - name: Setup environment
        run: |
          make env.up
      # Build and Test
      - name: Run CI jobs
        run: |
          make ci
      # Publish documentation
      - name: Set default gh-pages branch
        run: echo "GH_PAGES_BRANCH=gh-pages-test" >> $GITHUB_ENV
      - name: Update gh-pages branch on release branch
        if: github.ref == 'refs/heads/release'
        run: echo "GH_PAGES_BRANCH=gh-pages" >> $GITHUB_ENV
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: ${{ env.GH_PAGES_BRANCH }}
          build_dir: gh-pages-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Deploy to pypi
      - name: Set default pypi url
        run: |
          echo "PYPI_INDEX_URL=https://test.pypi.org/legacy/" >> $GITHUB_ENV
          echo "PYPI_API_TOKEN=${{ secrets.PYPI_TEST_API_TOKEN }}" >> $GITHUB_ENV
      - name: Update pypi url on release tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "PYPI_INDEX_URL=https://upload.pypi.org/legacy/ >> $GITHUB_ENV
          echo "PYPI_API_TOKEN=${{ secrets.PYPI_API_TOKEN }}" >> $GITHUB_ENV
      - name: Publish PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ env.PYPI_API_TOKEN }}
          repository_url: ${{ env.PYPI_INDEX_URL }}
          skip_existing: ${{ env.PYPI_INDEX_URL == 'https://test.pypi.org/legacy/' }}
